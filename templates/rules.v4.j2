{% set def_int = ansible_default_ipv4.interface %}
{% set def_addr = ansible_default_ipv4.address %}
{% set def_in = "-A INPUT -i " ~ def_int ~ " -d " ~ def_addr  %}
{% set def_out = "-A OUTPUT -o " ~ def_int ~ " -s " ~ def_addr %}
{% set state_ne_com = "-m state --state NEW,ESTABLISHED -j ACCEPT -m comment --comment" %}
{% set state_e_com = "-m state --state ESTABLISHED -j ACCEPT -m comment --comment" %}
#######################
### ANSIBLE MANAGED ###
#######################

*filter
-F
-X
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# loopback allowed
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT
{% if (iptables_blocked_hosts is defined) and (iptables_blocked_hosts | length > 0) %}

#########################
### BGN BLOCKED HOSTS ###
#########################
{%- for host in iptables_blocked_hosts +%}
-A INPUT -s {{ host }} -j DROP -m comment --comment "block host"
-A OUTPUT -d {{ host }} -j DROP -m comment --comment "block host"
{% endfor %}
#########################
### END BLOCKED HOSTS ###
#########################
{% endif %}

#########################
### BGN INBOUND RULES ###
#########################
# ping in
-A INPUT -p icmp --icmp-type echo-request {{ state_ne_com }} "ping in"
-A OUTPUT -p icmp --icmp-type echo-reply {{ state_e_com }} "ping in"

# ssh in
{% if (iptables_ssh_srcs is defined) and (iptables_ssh_srcs | length > 0) %}
{% for src in iptables_ssh_srcs %}
{{ def_in }} -s {{ src }} -p tcp --dport 22 {{ state_ne_com }} "ssh in"
{{ def_out }} -d {{ src }} -p tcp --sport 22 {{ state_e_com }} "ssh in"
{% endfor %}
{% else %}
{{ def_in }} -p tcp --dport 22 {{ state_ne_com }} "ssh in"
{{ def_out }} -p tcp --sport 22 {{ state_e_com }} "ssh in"
{% endif %}
{% if iptables_webserver %}

# http / https in
{{ def_in }} -p tcp -m multiport --dports 443,80 {{ state_ne_com }} "https & http in"
{{ def_out }} -p tcp -m multiport --sports 443,80 {{ state_e_com }} "https & http in"
{% endif %}
{% if iptables_zabbix is defined and iptables_zabbix %}

# zabbix in
{{ def_in }} {% if iptables_zabbix_src is defined -%} -s {{ iptables_zabbix_src+" "-}} {% endif %}
-p tcp --dport 10050 {{ state_ne_com }} "zabbix in"
{{ def_out }} {% if iptables_zabbix_src is defined -%} -d {{ iptables_zabbix_src+" "-}} {% endif %}
-p tcp --sport 10050 {{ state_e_com }} "zabbix in"
{% endif %}
{% if iptables_snmp is defined and iptables_snmp %}

# snmp in
{% for protocol in [ "tcp", "udp" ] %}
{{ def_in }} {% if iptables_snmp_src is defined -%} -s {{ iptables_snmp_src+" "-}} {% endif %}
-p {{ protocol }} -m multiport --dports 161,162 {{ state_ne_com }} "snmp in"
{{ def_out }} {% if iptables_snmp_src is defined -%} -d {{ iptables_snmp_src+" "-}} {% endif %}
-p {{ protocol }} -m multiport --sports 161,162 {{ state_e_com }} "snmp in"
{% endfor %}
{% endif %}
#########################
### END INBOUND RULES ###
#########################

##########################
### BGN OUTBOUND RULES ###
##########################
# ping out
-A OUTPUT -p icmp --icmp-type echo-request {{ state_ne_com }} "ping out"
-A INPUT -p icmp --icmp-type echo-reply {{ state_e_com }} "ping out"

# ntp / dns out
{{ def_out }} -p udp -m multiport --dports 123,53 {{ state_ne_com }} "ntp & dns out"
{{ def_in }} -p udp -m multiport --sports 123,53 {{ state_e_com }} "ntp & dns out"
{% if iptables_dhcp %}

# dhcp out
{{ def_out }} -p udp -m multiport --dports 67,68 {{ state_ne_com }} "dhcp out"
{{ def_in }} -p udp -m multiport --sports 67,68 {{ state_e_com }} "dhcp out"
{% endif %}

# http / https out
{{ def_out }} -p tcp -m multiport --dports 443,80 {{ state_ne_com }} "https & http out"
{{ def_in }} -p tcp -m multiport --sports 443,80 {{ state_e_com }} "https & http out"
##########################
### END OUTBOUND RULES ###
##########################
{% if (iptables_custom_rules is defined) and (iptables_custom_rules | length > 0) %}

########################
### BGN CUSTOM RULES ###
########################
{% for rule in iptables_custom_rules %}
{{ rule }}
{% endfor %}
########################
### END CUSTOM RULES ###
########################
{% endif %}

# drop rules
-A INPUT -j LOG --log-prefix "IPTABLES-INPUT: "
-A INPUT -j DROP
-A OUTPUT -j LOG --log-prefix "IPTABLES-OUTPUT: "
-A OUTPUT -j DROP
-A FORWARD -j LOG --log-prefix "IPTABLES-FORWARD: "
-A FORWARD -j DROP

COMMIT
